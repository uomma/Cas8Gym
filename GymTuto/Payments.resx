<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>